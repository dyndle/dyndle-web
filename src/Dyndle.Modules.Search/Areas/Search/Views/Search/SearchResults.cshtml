@using Dyndle.Modules.Search.Providers.Solr
@model Dyndle.Modules.Search.Contracts.ISearchResults
@{
    var baseUrl = Request.Url.LocalPath + "?";
}
<h1>Search Results</h1>
<form method="post" action="@baseUrl">
    <input type="text" name="q" class="field-input" value="@Model.Query.QueryText"/>
    <input type="submit" value="Search" />
    <br/>
    @if (Model.Total > 0)
    { 
        <h2>
            @String.Format("Showing {0}-{1} of {2} results", Model.Query.Start, Model.End, Model.Total)
        </h2>
        <br/>
        <ul style="list-style-type: none;margin:0;padding:0;">
            <li style="display: inline; padding:5px; margin:5px; border:1px #808080 solid;background-color:lightblue">
                <a href="@(baseUrl + SearchProvider.GetFilterQueryString(Model.Query,null,null))">Clear Filters</a>
            </li>
            @*@foreach (var filter in Model.AvailableFilters)
            {
                <li style="display: inline; padding:5px; margin:5px; border:1px #808080 solid;background-color:lightblue">
                    <a href="@(baseUrl + SearchProvider.GetFilterQueryString(Model.Query,"facet_section",filter.Value))">@filter.DisplayName (@filter.NumberOfHits)</a>
                </li>
            }*@
        </ul>
        <br/>
        @Html.Partial("FullResults")
        if (Model.Total > Model.Query.PageSize)
        {
        <div>
            Page: 
            @if (Model.Query.Start > 1)
            {
                <a href="@(baseUrl + SearchProvider.GetPageQueryString(Model.Query, Model.CurrentPage - 1))">@(Model.CurrentPage - 1)</a>
            }
            <strong>@Model.CurrentPage </strong>
            @if (Model.HasMore)
            {
              <a href="@(baseUrl + SearchProvider.GetPageQueryString(Model.Query, Model.CurrentPage + 1))">@(Model.CurrentPage + 1)</a>
            }
        </div>
        }
    }
    else
    {
    <div>
        @(Model.ErrorMessage != null ? Model.ErrorMessage : "No results found")
    </div>
    }
</form>