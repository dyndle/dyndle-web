@using Dyndle.Modules.Core.Html
@using Dyndle.Modules.Feedback.Html
@model FeedbackFormViewModel

<div class="contact-form">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="container">
            <div class="row">
                <div class="col-md-8 col-md-offset-2">
                    <div class="row">
                        @Html.ValidationSummary()
                    </div>
                    <div class="row">
                        <div class="col-xs-12 col-sm-6">
                            @Html.DropDownListFor(m => m.Title, Html.CreateSelectList(Model.Titles, Html.GetLabel(FeedbackConstants.Labels.Title)), new { @class = "selectpicker" })
                            <label for="@Html.IdFor(m => m.Title)">@Html.GetLabel(FeedbackConstants.Labels.Title)*</label>

                            @Html.TextBoxFor(m => m.Name, new { placeholder = Html.GetLabel(FeedbackConstants.Labels.Name) })
                            <label for="@Html.IdFor(m => m.Name)">@Html.GetLabel(FeedbackConstants.Labels.Name)*</label>

                            @Html.TextBoxFor(m => m.FirstName, new { placeholder = Html.GetLabel(FeedbackConstants.Labels.FirstName) })
                            <label for="@Html.IdFor(m => m.FirstName)">@Html.GetLabel(FeedbackConstants.Labels.FirstName)*</label>

                            @Html.TextBoxFor(m => m.Address, new { placeholder = Html.GetLabel(FeedbackConstants.Labels.Address) })
                            <label for="@Html.IdFor(m => m.Address)">@Html.GetLabel(FeedbackConstants.Labels.Address)*</label>

                            @Html.TextBoxFor(m => m.PostalCode, new { placeholder = Html.GetLabel(FeedbackConstants.Labels.PostalCode) })
                            <label for="@Html.IdFor(m => m.PostalCode)">@Html.GetLabel(FeedbackConstants.Labels.PostalCode)*</label>

                            @Html.TextBoxFor(m => m.City, new { placeholder = Html.GetLabel(FeedbackConstants.Labels.City) })
                            <label for="@Html.IdFor(m => m.City)">@Html.GetLabel(FeedbackConstants.Labels.City)*</label>

                            @Html.TextBoxFor(m => m.Phone, new { placeholder = Html.GetLabel(FeedbackConstants.Labels.Phone) })
                            <label for="@Html.IdFor(m => m.Phone)">@Html.GetLabel(FeedbackConstants.Labels.Phone)</label>
                        </div>
                        <div class="col-xs-12 col-sm-6">
                            @Html.DropDownListFor(m => m.Country, Html.CreateSelectList(Model.Countries, Html.GetLabel(FeedbackConstants.Labels.Country)), new { @class = "selectpicker" })
                            <label for="@Html.IdFor(m => m.Country)">@Html.GetLabel(FeedbackConstants.Labels.Country)*</label>

                            @Html.TextBoxFor(m => m.Email, new { placeholder = Html.GetLabel(FeedbackConstants.Labels.Email) })
                            <label for="@Html.IdFor(m => m.Email)">@Html.GetLabel(FeedbackConstants.Labels.Email)*</label>

                            @Html.TextBoxFor(m => m.ConfirmEmail, new { placeholder = Html.GetLabel(FeedbackConstants.Labels.ConfirmEmail) })
                            <label for="@Html.IdFor(m => m.ConfirmEmail)">@Html.GetLabel(FeedbackConstants.Labels.ConfirmEmail)*</label>

                            @Html.DropDownListFor(m => m.AgeRange, Html.CreateSelectList(Model.AgeRanges, Html.GetLabel(FeedbackConstants.Labels.AgeRange)), new { @class = "selectpicker" })
                            <label for="@Html.IdFor(m => m.AgeRange)">@Html.GetLabel(FeedbackConstants.Labels.AgeRange)</label>

                            @Html.DropDownListFor(m => m.AffectedProduct, Html.CreateSelectList(Model.Products, Html.GetLabel(FeedbackConstants.Labels.AffectedProduct)), new { @class = "selectpicker" })
                            <label for="@Html.IdFor(m => m.AffectedProduct)">@Html.GetLabel(FeedbackConstants.Labels.AffectedProduct)*</label>

                            @Html.TextBoxFor(m => m.ControlNumber, new { placeholder = @Html.GetLabel(FeedbackConstants.Labels.ControlNumber) })
                            <label for="@Html.IdFor(m => m.ControlNumber)">@Html.Raw(Html.GetLabel(FeedbackConstants.Labels.ControlNumberExplanation))</label>

                            @Html.TextBoxFor(m => m.BarCode, new { placeholder = @Html.GetLabel(FeedbackConstants.Labels.BarCode) })
                            <label for="@Html.IdFor(m => m.BarCode)">@Html.Raw(Html.GetLabel(FeedbackConstants.Labels.BarCodeExplanation))</label>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-xs-12 col-sm-6">
                            @Html.DropDownListFor(m => m.Reason, Html.CreateSelectList(Model.Reasons, Html.GetLabel(FeedbackConstants.Labels.Reason)), new { @class = "selectpicker" })
                            <label for="@Html.IdFor(m => m.Reason)">@Html.GetLabel(FeedbackConstants.Labels.Reason)*</label>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-xs-12">
                            @Html.TextAreaFor(m => m.Message, new { rows = "6", placeholder = @Html.GetLabel(FeedbackConstants.Labels.Message) })
                        </div>
                    </div>

                    <div class="row checkbox-input">
                        <div class="col-xs-12">
                            <input id="@Html.IdFor(m => m.AcceptTermsConditions)" name="@Html.NameFor(m => m.AcceptTermsConditions)" type="checkbox" value="true" @(Model.AcceptTermsConditions ? "checked" : "")>
                            <label for="@Html.IdFor(m => m.AcceptTermsConditions)">@Html.Raw(Html.GetLabel(FeedbackConstants.Labels.TermsConditions))*</label>
                            <input name="@Html.NameFor(m => m.AcceptTermsConditions)" type="hidden" value="false">

                            <input id="@Html.IdFor(m => m.NewsletterOptIn)" name="@Html.NameFor(m => m.NewsletterOptIn)" type="checkbox" value="true" @(Model.NewsletterOptIn ? "checked" : "")>
                            <label for="@Html.IdFor(m => m.NewsletterOptIn)">@Html.GetLabel(FeedbackConstants.Labels.SignedUpNewsletter)</label>
                            <input name="@Html.NameFor(m => m.NewsletterOptIn)" type="hidden" value="false">
                        </div>
                    </div>

                    <div class="contact-form__actions">
                        <button type="submit" class="btn btn-pink-outline">@Html.GetLabel(FeedbackConstants.Labels.Send)</button>
                    </div>

                </div>
            </div>
        </div>
    }
</div>